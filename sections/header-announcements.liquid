{%- liquid
  assign section_settings = section.settings
  assign section_blocks = section.blocks
  assign should_render = false

  if section_blocks.size > 0
    assign should_render = true
  endif
-%}

{%- if should_render -%}
  <style>
    .header-announcements {
      overflow: hidden;
      position: relative;
      padding-top: 10px;
      padding-bottom: 10px;
    }
    .header-announcements__container {
      display: flex;
      transition: transform 0.6s ease-in-out;
    }
    .header-announcements__slide {
      min-width: 100%;
      box-sizing: border-box;
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
    }
    .header-announcements__slide p {
      margin: 0;
    }
  </style>

  <div
    class="header-announcements"
    id="announcement-slider-{{ section.id }}"
    data-section-id="{{ section.id }}"
    data-delay="{{ section_settings.delay }}"
    style="color: {{ section_settings.text_color }}; background-color: {{ section_settings.background_color }};"
  >
    <div class="header-announcements__container">
      {%- for block in section_blocks -%}
        <div class="header-announcements__slide">
          {{ block.settings.text }}
        </div>
      {%- endfor -%}
    </div>
  </div>

  <script>
    class AnnouncementSlider {
      constructor(element) {
        this.bar = element;
        this.container = this.bar.querySelector('.header-announcements__container');
        this.slides = this.container.querySelectorAll('.header-announcements__slide');
        this.delay = parseInt(this.bar.dataset.delay, 10) * 1000;
        this.currentIndex = 0;

        if (this.slides.length > 1) {
          this.init();
        }
      }

      init() {
        setInterval(() => {
          this.currentIndex = (this.currentIndex + 1) % this.slides.length;
          this.container.style.transform = `translateX(-${this.currentIndex * 100}%)`;
        }, this.delay);
      }
    }

    document.addEventListener('DOMContentLoaded', () => {
      const sliderElement = document.getElementById('announcement-slider-{{ section.id }}');
      if (sliderElement) {
        new AnnouncementSlider(sliderElement);
      }
    });

    document.addEventListener('shopify:section:load', (event) => {
        const sliderElement = document.getElementById('announcement-slider-{{ section.id }}');
        if (sliderElement) {
            new AnnouncementSlider(sliderElement);
        }
    });
  </script>
{%- endif -%}

{% schema %}
{
  "name": "Announcement bar",
  "settings": [
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#FFFFFF"
    },
    {
      "type": "range",
      "id": "delay",
      "min": 2,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Slide delay",
      "default": 4
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "Announcement",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Your announcement here</p>"
        }
      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "announcement"
      },
      {
        "type": "announcement",
        "settings": {
          "text": "<p>A second announcement</p>"
        }
      }
    ]
  }
}
{% endschema %}